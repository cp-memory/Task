# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def mergeKLists(self, lists: List[ListNode]) -> ListNode:
        l = ListNode(0)
        rt = l
        def allNull(lists):
            for i in lists:
                if i != None:
                    return False
            return True
        
        while not allNull(lists):
            min_val = min([i.val for i in lists if i!=None])
            for i in range(0,len(lists)):
                if lists[i] != None and lists[i].val == min_val:
                    lists[i] = lists[i].next
                    l.next = ListNode(min_val)
                    l = l.next
    
        return rt.next
